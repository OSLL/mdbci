#!/usr/bin/env ruby

require 'getoptlong'

require_relative 'core/help'
require_relative 'core/generator'
require_relative 'core/session'
require_relative 'core/node_product'
require_relative 'core/out'
require_relative 'core/exception_handler'

#Reading options
opts = GetoptLong.new(
    ['--help', '-h', GetoptLong::NO_ARGUMENT],
    ['--template', '-t', GetoptLong::REQUIRED_ARGUMENT],
    ['--command', '-c', GetoptLong::REQUIRED_ARGUMENT],
    ['--boxes', '-b', GetoptLong::REQUIRED_ARGUMENT],
    ['--override', '-w', GetoptLong::NO_ARGUMENT],
    ['--silent', '-s', GetoptLong::NO_ARGUMENT],
    ['--repo-dir','-r',GetoptLong::REQUIRED_ARGUMENT],
    ['--attempts','-a',GetoptLong::REQUIRED_ARGUMENT],
    ['--product','-p',GetoptLong::REQUIRED_ARGUMENT]
)

$session = Session.new
$session.configFile='instance.json'
$session.boxesFile='boxes.json'
$session.awsConfigFile='aws-config.yml'
$exception_handler = ExceptionHandler.new

$out = Out.new

opts.each do |opt, arg|
  case opt
    when '--template'
      if arg != ''; $session.configFile = arg; end
      $out.info 'Using template name '+$session.configFile

    when '--boxes'
      if arg != ''; $session.boxesFile = arg; end
      $out.info 'Using boxes name '+$session.boxesFile

    when '--help'
      Help.display
      exit

    when '--override'
      $session.isOverride = true

    when '--command'
      $session.command = arg

    when '--silent'
      $session.isSilent = true

    when '--repo-dir'
      $session.repoDir = arg

	  when '--attempts'
	    $session.attempts = arg

    when '--product'
      if arg != ''; $session.nodeProduct = arg; end
      $out.info 'Install repo for '+$session.nodeProduct

    else
      $out.error 'Option are not supported:'+opt
  end
end

#Hello message
$out.info 'MariaDb CI CLI'
$out.info 'mdbci called with: '+ARGV.to_s

=begin
  run command (create config only for now)
=end

$session.checkConfig
$session.loadCollections

case ARGV.shift
  when 'show'
    $session.show(ARGV.shift)
  when 'sudo'
    $session.sudo(ARGV.shift)
  when 'ssh'
    $session.ssh(ARGV.shift)
  when 'setup'
    $session.setup(ARGV.shift)
  when 'generate'
    $session.generate(ARGV.shift)
  when 'install_repo'
    NodeProduct.installProductRepo(ARGV.shift)
  when 'up'
    $session.up(ARGV.shift)
  else
    puts 'ERR: Something wrong with command line'
    Help.display
end
